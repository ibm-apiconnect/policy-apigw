info:
  description: ''
  x-ibm-name: <USE YOUR X-IBM-NAME>
  version: 1.0.0
  title: <USE YOUR TITLE>
x-ibm-configuration:
  gateway: datapower-api-gateway
  assembly:
    execute:
      - oauth:
          title: oauth-auto-generated-1
          version: 2.0.0
          description: >-
            This oauth policy performs all OAuth/OpenID Connect protocol steps
            that are needed for OAuth Validation by default. The inputs and
            outputs of each of the steps are driven by documented context
            variables. Add or remove the Supported OAuth Components as required.
          oauth-provider-settings-ref:
            default: e2e-oauth
          supported-oauth-components:
            - OAuthValidateRequest
      - switch:
          version: 2.0.0
          title: oauth-auto-generated-switch
          case:
            - condition: ($operationPath() = '/oauth2/token')
              execute:
                - user-security:
                    title: user-security-auto-generated-password
                    version: 2.1.0
                    description: ''
                    factor-id: default
                    extract-identity-method: context-var
                    ei-stop-on-error: false
                    user-auth-method: user-registry
                    au-stop-on-error: false
                    user-az-method: authenticated
                    az-stop-on-error: true
                    auth-response-headers-pattern: (?i)x-api*
                    auth-response-header-credential: X-API-Authenticated-Credential
                    pass-context-var: request.parameters.password.values
                    user-context-var: request.parameters.username.values
                    user-registry: sampleauth
                - oauth:
                    title: oauth-auto-generated-3
                    version: 2.0.0
                    description: >-
                      This oauth policy performs all OAuth/OpenID Connect
                      protocol steps that are needed for token path by default.
                      The inputs and outputs of each of the steps are driven by
                      documented context variables. Add or remove the Supported
                      OAuth Components as required.
                    oauth-provider-settings-ref:
                      default: e2e-oauth
                    supported-oauth-components:
                      - OAuthGenerateAccessToken
                      - OAuthVerifyAZCode
                      - OAuthVerifyRefreshToken
                      - OAuthCollectMetadata
            - condition: ($operationPath() = '/oauth2/authorize')
              execute:
                - user-security:
                    title: user-security-auto-generated
                    version: 2.1.0
                    description: >-
                      This user security policy performs EI(basic) and AU(auth
                      url) check for oauth assembly. Change the security check
                      method as required.
                    factor-id: default
                    extract-identity-method: html-form
                    ei-stop-on-error: true
                    user-auth-method: user-registry
                    au-stop-on-error: true
                    user-az-method: authenticated
                    az-stop-on-error: true
                    auth-response-headers-pattern: (?i)x-api*
                    auth-response-header-credential: X-API-Authenticated-Credential
                    ei-form-time-limit: 300
                    ei-default-form: true
                    user-registry: sampleauth
                - oauth:
                    title: oauth-auto-generated-2
                    version: 2.0.0
                    description: >-
                      This oauth policy performs all OAuth/OpenID Connect
                      protocol steps that are needed for az code path by
                      default. The inputs and outputs of each of the steps are
                      driven by documented context variables. Add or remove the
                      Supported OAuth Components as required.
                    oauth-provider-settings-ref:
                      default: e2e-oauth
                    supported-oauth-components:
                      - OAuthGenerateAZCode
                      - OAuthGenerateAccessToken
                      - OAuthVerifyAZCode
                      - OAuthCollectMetadata
            - condition: ($operationPath() = '/oauth2/session')
              execute:
                - switch:
                    version: 2.0.0
                    title: oauth-auto-generated-switch
                    case:
                      - condition: ($apiCtx().tokenFoundInCache = 'true')
                        execute:
                          - set-variable:
                              version: 2.0.0
                              title: set-variable
                              actions:
                                - set: message.headers.session-from-cache
                                  value: true
                                  type: any
                      - otherwise:
                          - set-variable:
                              version: 2.0.0
                              title: set-variable
                              actions:
                                - set: message.headers.session-from-cache
                                  value: false
                                  type: any
            - otherwise:
                - oauth:
                    title: oauth-auto-generated-4
                    version: 2.0.0
                    description: >-
                      This oauth policy performs all OAuth/OpenID Connect
                      protocol steps that are needed for all other paths by
                      default. The inputs and outputs of each of the steps are
                      driven by documented context variables. Add or remove the
                      Supported OAuth Components as required.
                    oauth-provider-settings-ref:
                      default: e2e-oauth
                    supported-oauth-components:
                      - OAuthIntrospectToken
                      - OAuthRevokeToken
  type: oauth
  testable: true
  enforced: true
  phase: realized
  cors:
    enabled: true
  properties: {}
basePath: /e2e-oauth
swagger: '2.0'
host: $(catalog.host)
schemes:
  - https
paths:
  /oauth2/session:
    get:
      produces:
        - text/html
      parameters:
        - name: response_type
          in: query
          description: request an authorization code or an access token (implicit)
          required: true
          type: string
          enum:
            - code
            - token
        - name: client_id
          in: query
          description: client_id of the application which product is subscribed to
          required: true
          type: string
        - name: scope
          in: query
          description: Scope being requested
          type: string
          required: false
        - name: redirect_uri
          in: query
          type: string
          description: URI where user is redirected to after authorization
          required: false
      responses:
        '200':
          description: An HTML form for authentication or authorization of this request.
        '302':
          description: >
            Redirect to the clients redirect_uri containing one of the following

            - **authorization code** for Authorization code grant

            - **error** in case of errors, such as the user has denied the
            request
    post:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      summary: >-
        Endpoint for obtaining access token using Authorization code,
        Application and Password grants
      description: >-
        This endpoint allows requesting an access token following one of the
        flows below:
                - Access Code (exchange access code for an access token)
                - Client Credentials (2-legged, resource owner credentials are not obtained)
                - Resource Owner Password Credentials (2-legged, client provides resource owner name and password)
                - Refresh Token (exchange refresh token for a new access token)
      parameters:
        - name: grant_type
          in: formData
          required: true
          type: string
          enum:
            - authorization_code
            - password
            - client_credentials
            - refresh_token
            - urn:ietf:params:oauth:grant-type:jwt-bearer
        - name: client_id
          in: formData
          description: >-
            application requesting the token, if there is no Authorization
            header in the request, this parameter is required
          required: false
          type: string
        - name: client_secret
          in: formData
          description: >-
            application requesting the token, if the provider is confidential,
            this parameter is required
          required: false
          type: string
        - name: scope
          in: formData
          description: requested scope of this authorization
          required: false
          type: string
        - name: code
          in: formData
          description: >-
            access code generated from the az get request, required in Access
            code flow
          required: false
          type: string
        - name: refresh_token
          in: formData
          description: >-
            refresh token generated from the last token request, required in
            refresh token flow
          required: false
          type: string
        - name: assertion
          in: formData
          description: id_token in the JWT request, required in JWT flow
          required: false
          type: string
      responses:
        '200':
          description: 200 OK
  /oauth2/authorize:
    get:
      produces:
        - text/html
      summary: Endpoint for Authorization Code and Implicit grants
      description: >-
        This endpoint allows an access token (Implicit) or access code
        (Authorization Code) request with the following parameters:
                      - Implicit (response_type = token, client_id, scope, redirect_uri(*), state(*), response_mode(*))
                      - Authorization Code (response_type = code, client_id, scope, redirect_uri(*), state(*), response_mode(*))
      parameters:
        - name: response_type
          in: query
          description: request an authorization code or an access token (implicit)
          required: true
          type: string
          enum:
            - code
            - token
        - name: response_mode
          in: query
          description: If included, must have the value 'form_post'
          required: false
          type: string
        - name: client_id
          in: query
          description: client_id of the application which product is subscribed to
          required: true
          type: string
        - name: scope
          in: query
          description: Scope being requested
          type: string
          required: false
        - name: redirect_uri
          in: query
          type: string
          description: URI where user is redirected to after authorization
          required: false
        - name: state
          in: query
          type: string
          description: >-
            This string will be echoed back to application when user is
            redirected
          required: false
      responses:
        '200':
          description: An HTML form for authentication or authorization of this request.
        '302':
          description: >
            Redirect to the clients redirect_uri containing one of the following

            - **authorization code** for Authorization code grant

            - **access token** for Implicit grant

            - **error** in case of errors, such as the user has denied the
            request
    post:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - text/html
      summary: Endpoint for Authorization Code and Implicit grants
      description: Submit approval to access token.
      parameters:
        - name: response_type
          in: formData
          description: request an authorization code or an access token (implicit)
          required: false
          type: string
          enum:
            - code
            - token
        - name: client_id
          in: formData
          description: application requesting the access code or token
          required: false
          type: string
        - name: scope
          in: formData
          description: requested scope of this authorization
          required: false
          type: string
        - name: redirect_uri
          in: formData
          description: >-
            URI the application is requesting this code or token to be
            redirected to
          required: false
          type: string
      responses:
        '200':
          description: 200 OK
  /oauth2/token:
    post:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      summary: >-
        Endpoint for obtaining access token using Authorization code,
        Application and Password grants
      description: >-
        This endpoint allows requesting an access token following one of the
        flows below:
                - Access Code (exchange access code for an access token)
                - Client Credentials (2-legged, resource owner credentials are not obtained)
                - Resource Owner Password Credentials (2-legged, client provides resource owner name and password)
                - Refresh Token (exchange refresh token for a new access token)
      parameters:
        - name: grant_type
          in: formData
          required: true
          type: string
          enum:
            - authorization_code
            - password
            - client_credentials
            - refresh_token
            - urn:ietf:params:oauth:grant-type:jwt-bearer
        - name: client_id
          in: formData
          description: >-
            application requesting the token, if there is no Authorization
            header in the request, this parameter is required
          required: false
          type: string
        - name: client_secret
          in: formData
          description: >-
            application requesting the token, if the provider is confidential,
            this parameter is required
          required: false
          type: string
        - name: scope
          in: formData
          description: requested scope of this authorization
          required: false
          type: string
        - name: code
          in: formData
          description: >-
            access code generated from the az get request, required in Access
            code flow
          required: false
          type: string
        - name: refresh_token
          in: formData
          description: >-
            refresh token generated from the last token request, required in
            refresh token flow
          required: false
          type: string
        - name: assertion
          in: formData
          description: id_token in the JWT request, required in JWT flow
          required: false
          type: string
      responses:
        '200':
          description: 200 OK
definitions:
  access_token_response:
    type: object
    additionalProperties: false
    required:
      - access_token
    properties:
      access_token:
        type: string
